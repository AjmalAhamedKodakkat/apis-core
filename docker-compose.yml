version: "3"

services:

  gateway:
    build:
      context: .
      dockerfile: ./gateway/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./gateway/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
    ports:
      - "8100:80"
    links:
      - postgres
      - redis

  bitcoin-rpc:
    build:
      context: .
      dockerfile: ./bitcoin-rpc/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
    ports:
      - "${BITCOIN_RPC_PORT:-8101}:80"
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./bitcoin-rpc/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
    links:
      - bitcoin-core
      - postgres
      - redis

  ethereum-rpc:
    build:
      context: .
      dockerfile: ./ethereum-rpc/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
    ports:
      - "${ETHEREUM_RPC_PORT:-8102}:80"
    env_file:
    - .env
    volumes:
      - /app/node_modules
      - ./ethereum-rpc/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
    links:
      - postgres
      - redis

  solana-rpc:
    build:
      context: .
      dockerfile: ./solana-rpc/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
    ports:
      - "${SOLANA_RPC_PORT:-8105}:80"
    env_file:
    - .env
    volumes:
      - /app/node_modules
      - ./solana-rpc/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
    links:
      - postgres
      - redis

  bitcoin-listener:
    build:
      context: .
      dockerfile: ./bitcoin-listener/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
    ports:
      - "${BITCOIN_LISTENER_PORT:-8103}:80"
    env_file:
      - .env
    volumes:
      - /app/node_modules
      - ./bitcoin-listener/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
    links:
      - bitcoin-core
      - postgres
      - redis

  ethereum-listener:
    build:
      context: .
      dockerfile: ./ethereum-listener/src/Dockerfile
    command: npm run dev
    environment:
      NODE_ENV: development
      EXPRESS_PORT: 80
    env_file:
      - .env
    ports:
      - "${ETHEREUM_LISTENER_PORT:-8104}:80"
    volumes:
      - /app/node_modules
      - ./ethereum-listener/src:/app
      - ./share:/app/share
      - ./share/models:/app/constructors/sequelize/models
    links:
      - postgres
      - redis

  # solana-listener: // TODO

  bitcoin-core:
    image: ruimarinho/bitcoin-core:0.20.1
    ports:
      - "8332:8332"
      - "9332:9332"
      - "8333:8333"
      - "9333:9333"
      - "19332:19332"
      - "19333:19333"
      - "29332:29332"
    env_file:
      - .env
    command:
      - -regtest=1
      - -fallbackfee=0.000001
      - -listen=1
      - -txindex=1
      - -server=1
      - -printtoconsole
      - -port=19332
      - -rpcport=19333
      - -rpcallowip=127.0.0.1
      - -rpcallowip=172.17.0.0
      - -rpcallowip=172.17.0.0/8
      - -rpcallowip=172.17.0.0/16
      - -rpcallowip=192.168.0.0/16
      - -rpcbind=0.0.0.0
      - -rpcuser=bitcoin_rpc_user
      - -rpcpassword=bitcoin_rpc_pass
      - -zmqpubrawtx=tcp://*:29332
      - -zmqpubrawblock=tcp://*:29332
      - -zmqpubhashblock=tcp://*:29332
      - -zmqpubhashtx=tcp://*:29332
      - -keypool=100
      - -deprecatedrpc=generate

  # solana:
  #   image: solanalabs/solana:v1.4.3
  #   ports:
  #     - "8899:8899"
  #     - "9900:9900"
  #     - "8000-8010:8000-8010"
  #   env_file:
  #     - .env
    # command:
      # # - --identity ~/validator-keypair.json
      # # - --vote-account ~/vote-account-keypair.json
      # # - --trusted-validator 5D1fNXzvv5NjV1ysLjirC4WY92RNsVH18vjmcszZd8on
      # # - --trusted-validator ta1Uvfb7W5BRPrdGnhP9RmeCGKzBySGM1hTE4rBRy6T
      # # - --trusted-validator Ft5fbkqNa76vnsjYNwjDZUXoTWpP7VYm3mtsaQckQADN
      # # - --trusted-validator 9QxCLckBiJc783jnMvXZubK4wH86Eqqvashtrwvcsgkv
      # - --no-untrusted-rpc
      # # - --ledger ~/validator-ledger
      # - --rpc-port 8899
      # - --dynamic-port-range 8000-8010
      # - --entrypoint entrypoint.testnet.solana.com:8001
      # # - --expected-genesis-hash 4uhcVJyU9pJkvQyS88uRDiswHXSCkY3zQawwpjk2NsNY
      # - --wal-recovery-mode skip_any_corrupted_record
      # - --limit-ledger-size
    # command: sleep 10000
    # command: # solana-validator \
    #   - --identity ~/validator-keypair.json
    #   - --vote-account ~/vote-account-keypair.json
    #   - --trusted-validator 5D1fNXzvv5NjV1ysLjirC4WY92RNsVH18vjmcszZd8on
    #   - --trusted-validator ta1Uvfb7W5BRPrdGnhP9RmeCGKzBySGM1hTE4rBRy6T
    #   - --trusted-validator Ft5fbkqNa76vnsjYNwjDZUXoTWpP7VYm3mtsaQckQADN
    #   - --trusted-validator 9QxCLckBiJc783jnMvXZubK4wH86Eqqvashtrwvcsgkv
    #   - --no-untrusted-rpc
    #   - --ledger ~/validator-ledger
    #   - --rpc-port 8899
    #   - --dynamic-port-range 8000-8010
    #   - --entrypoint entrypoint.testnet.solana.com:8001
    #   - --expected-genesis-hash 4uhcVJyU9pJkvQyS88uRDiswHXSCkY3zQawwpjk2NsNY
    #   - --wal-recovery-mode skip_any_corrupted_record
    #   - --limit-ledger-size

  postgres:
    image: postgres:13
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"

  redis:
    image: "redis:alpine"
    # command: redis-server --requirepass sOmE_sEcUrE_pAsS
    command: redis-server
    ports:
     - "6379:6379"
    # volumes:
    #  - $PWD/redis-data:/var/lib/redis
    #   - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
     - REDIS_REPLICATION_MODE=master

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   env_file:
  #     - .env
